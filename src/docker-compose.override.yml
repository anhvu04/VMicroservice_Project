services:
  #product-db
  product-db:
    container_name: product-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    env_file:
      - .env
    restart: always
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
  
  #customer-db
  customer-db:
    container_name: customer-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
  
  #basket-db
  basket-db:
    container_name: basket-db
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    env_file:
      - .env
    restart: always
    ports:
      - "6380:6379"
  
  #order-db
  order-db:
    container_name: order-db
    environment:
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      ACCEPT_EULA: "Y"
    env_file:
      - .env
    restart: always
    ports:
      - "1434:1433"
    volumes:
      - sqlserver-data:/var/lib/sqlserver/data
  
  #inventory-db
  inventory-db:
    container_name: inventory-db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    env_file:
      - .env
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/var/lib/mongo/data
  
  #rabbitmq
  rabbitmq:
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    env_file:
      - .env
    restart: always
    ports:
      - "5673:5672"     # RabbitMQ message broker port
      - "15673:15672"   # RabbitMQ management UI port
  
  #pgadmin
  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    env_file:
      - .env
    restart: always
    ports:
      - "5051:80"
    volumes:
      - pgadmin-data:/root/.pgadmin
  
  #portainer
  portainer:
    container_name: portainer
    environment:
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    env_file:
      - .env
    restart: always
    ports:
      - "6767:8000"    #portainer port
      - "6768:9000"    #portainer UI port
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
  
  #elasticsearch
  elasticsearch:
    container_name: elasticsearch
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    env_file:
      - .env
    ports:
      - "5778:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
  
  #kibana
  kibana:
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:5778
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
    env_file:
      - .env
    ports:
      - "5602:5601"
    depends_on:
      - elasticsearch
  
  #product-api
  product-api:
    container_name: product-api
    env_file:
      - .env
    depends_on:
      - product-db
    ports:
      - "6002:8080"
    restart: always
  
  #customer-api
  customer-api:
    container_name: customer-api
    env_file:
      - .env
    depends_on:
      - customer-db
    ports:
      - "6003:8080"
    restart: always
  
  #basket-api
  basket-api:
    container_name: basket-api
    env_file:
      - .env
    depends_on:
      - basket-db
    ports:
      - "6004:8080"
    restart: always
